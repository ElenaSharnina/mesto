(()=>{"use strict";var e={formSelector:".modal__form",inputSelector:".modal__field",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__field_type_error",errorClass:"modal__error_visible"},t=document.querySelector(".profile__edit-button"),n=document.querySelector(".modal__field_type_name"),r=document.querySelector(".modal__field_type_occupation"),o=(document.querySelector(".profile__name"),document.querySelector(".profile__occupation"),document.querySelector(".profile__foto"),document.querySelector(".profile__add-button")),i=(document.querySelector(".modal__field_type_card-name"),document.querySelector(".modal__field_type_card-link"),document.querySelector(".modal__button_place_profile"),document.querySelector(".modal__button_type_create"),document.querySelector(".modal__button_place_edit-avatar"),document.querySelector(".profile__avatar"));function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}document.querySelector(".modal__field_type_url-avatar"),document.querySelector(".modal__field_type_card-name"),document.querySelector(".modal__field_type_card-link");var l=function(){function e(t,n,r,o,i,c,l){var a,u,s=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),u=function(){s._element.remove()},(a="deleteElement")in this?Object.defineProperty(this,a,{value:u,enumerable:!0,configurable:!0,writable:!0}):this[a]=u,this._item=t,this._name=t.name,this._link=t.link,this._likes=t.likes,this._id=t._id,this._selector=n,this._openModalCard=r,this._myId=o,this._ownerId=t.owner._id,this._like=c,this._dislike=l,this._handleCardDelete=i}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._selector).content.querySelector(".element").cloneNode(!0)}},{key:"getId",value:function(){return this._id}},{key:"createCard",value:function(){return this._element=this._getTemplate(),this._ownerId!=this._myId&&this._element.querySelector(".element__delete").remove(),this._element.querySelector(".element__image").src=this._link,this._element.querySelector(".element__image").alt=this._name,this._element.querySelector(".element__name").textContent=this._name,this._setEventListeners(),this.countLikes(this._item),this._checkLikes(),this._element}},{key:"likeElement",value:function(){this._element.querySelector(".element__like").classList.add("element__like_active")}},{key:"dislikeElement",value:function(){this._element.querySelector(".element__like").classList.remove("element__like_active")}},{key:"_checkLikes",value:function(){var e=this;this._likes.forEach((function(t){t._id===e._myId&&e._element.querySelector(".element__like").classList.add("element__like_active")}))}},{key:"countLikes",value:function(e){this._element.querySelector(".element__count").textContent=e.likes.length,0===e.likes.length?this._element.querySelector(".element__count").classList.add("element__count_disactive"):this._element.querySelector(".element__count").classList.remove("element__count_disactive")}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".element__image").addEventListener("click",(function(){e._openModalCard(e._name,e._link)})),this._ownerId===this._myId&&this._element.querySelector(".element__delete").addEventListener("click",(function(){e._handleCardDelete()})),this._element.querySelector(".element__like").addEventListener("click",(function(){e._element.querySelector(".element__like").classList.contains("element__like_active")?(e.dislikeElement(),e._dislike()):(e.likeElement(),e._like())}))}}])&&c(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function u(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var s=function(){function e(t,n){var r=this,o=t.inputSelector,i=t.submitButtonSelector,c=t.inactiveButtonClass,l=t.inputErrorClass,a=t.errorClass;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),u(this,"_hideInputError",(function(e){var t=r._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(r._inputErrorClass),t.classList.remove(r._errorClass),t.textContent=""})),u(this,"_toggleButtonState",(function(){var e=r._form.querySelector(r._submitButtonSelector);r._inputList.some((function(e){return!e.validity.valid}))?(e.setAttribute("disabled",!0),e.classList.add(r._inactiveButtonClass)):(e.removeAttribute("disabled"),e.classList.remove(r._inactiveButtonClass))})),u(this,"_checkInputValidity",(function(e){e.validity.valid?r._hideInputError(e):r._showInputError(e,e.validationMessage)})),u(this,"_setEventListeners",(function(){r._inputList.forEach((function(e){e.addEventListener("input",(function(){r._checkInputValidity(e),r._toggleButtonState()}))})),r._toggleButtonState()})),u(this,"enableValidation",(function(){r._form.addEventListener("submit",(function(e){e.preventDefault()})),r._setEventListeners()})),this._inputSelector=o,this._submitButtonSelector=i,this._inactiveButtonClass=c,this._inputErrorClass=l,this._errorClass=a,this._form=document.querySelector(n),this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector))}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e,t){var n=this._form.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),n.textContent=t,n.classList.add(this._errorClass)}},{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}}])&&a(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var _=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._initialArray=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._initialArray.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&f(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function p(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var h=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),p(this,"_closeModalByESC",(function(e){"Escape"===e.key&&n.close()})),p(this,"_closeModalByOverlay",(function(e){e.target.classList.contains("modal")&&n.close()})),p(this,"_closeModalByIcon",(function(){n.close()})),this._popup=document.querySelector(t),this._closeBtn=this._popup.querySelector(".modal__close-icon")}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("modal_active"),document.body.classList.add("page-js"),this.setEventListeners()}},{key:"close",value:function(){this._popup.classList.remove("modal_active"),document.body.classList.remove("page-js"),this.removeEventListener()}},{key:"setEventListeners",value:function(){this._closeBtn.addEventListener("click",this._closeModalByIcon),document.addEventListener("click",this._closeModalByOverlay),document.addEventListener("keydown",this._closeModalByESC)}},{key:"removeEventListener",value:function(){document.removeEventListener("keydown",this._closeModalByESC),this._closeBtn.removeEventListener("click",this._closeModalByIcon),document.removeEventListener("click",this._closeModalByOverlay)}}])&&d(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(){return v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=b(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},v.apply(this,arguments)}function b(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=S(e)););return e}function k(e,t){return k=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},k(e,t)}function g(e,t){if(t&&("object"===y(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function S(e){return S=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},S(e)}var w=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&k(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=S(r);if(o){var n=S(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return g(this,e)});function c(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(t=i.call(this,e))._popupImage=t._popup.querySelector(".modal-card__image"),t._popupLabel=t._popup.querySelector(".modal-card__label"),t}return t=c,(n=[{key:"open",value:function(e,t){v(S(c.prototype),"open",this).call(this),this._popupImage.src=t,this._popupLabel.textContent=e,this._popupImage.alt=e}}])&&m(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(h);function E(e){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},E(e)}function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function L(){return L="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=j(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},L.apply(this,arguments)}function j(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=q(e)););return e}function C(e,t){return C=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},C(e,t)}function P(e,t){if(t&&("object"===E(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return I(e)}function I(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function q(e){return q=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},q(e)}function R(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&C(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=q(r);if(o){var n=q(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return P(this,e)});function c(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),R(I(n=i.call(this,e)),"_getInputValues",(function(){var e={};return n._inputList.forEach((function(t){e[t.name]=t.value})),e})),R(I(n),"_handleSubmit",(function(){n._handleFormSubmit(n._getInputValues())})),n._handleFormSubmit=t,n._form=n._popup.querySelector(".modal__form"),n._inputList=n._form.querySelectorAll(".modal__field"),n}return t=c,(n=[{key:"setEventListeners",value:function(){L(q(c.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",this._handleSubmit)}},{key:"removeEventListener",value:function(){L(q(c.prototype),"removeEventListener",this).call(this),this._form.removeEventListener("submit",this._handleSubmit)}},{key:"close",value:function(){L(q(c.prototype),"close",this).call(this),this._form.reset()}},{key:"alertLoading",value:function(e,t){this._popup.querySelector(".modal__button_loader").textContent=e?"Сохранение...":t}}])&&O(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(h);function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var x=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=document.querySelector(t),this._userInfo=document.querySelector(n),this._userAvatar=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{userName:this._userName.textContent,userInfo:this._userInfo.textContent}}},{key:"setUserInfo",value:function(e){this._userName.textContent=e.name,this._userInfo.textContent=e.about,this._userAvatar.src=e.avatar,this._id=e._id}},{key:"getId",value:function(){return this._id}}])&&T(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function A(e){return A="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},A(e)}function D(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function M(){return M="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=U(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},M.apply(this,arguments)}function U(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=F(e)););return e}function V(e,t){return V=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},V(e,t)}function N(e,t){if(t&&("object"===A(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return J(e)}function J(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function F(e){return F=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},F(e)}var G=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&V(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=F(r);if(o){var n=F(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return N(this,e)});function c(e,t){var n,r,o,l;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),l=function(e){e.preventDefault(),n._deleteElement()},(o="_handleSubmitDelete")in(r=J(n=i.call(this,e)))?Object.defineProperty(r,o,{value:l,enumerable:!0,configurable:!0,writable:!0}):r[o]=l,n._form=document.querySelector(t),n}return t=c,(n=[{key:"open",value:function(e){M(F(c.prototype),"open",this).call(this),this._deleteElement=e}},{key:"setEventListeners",value:function(){M(F(c.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",this._handleSubmitDelete)}},{key:"removeEventListener",value:function(){M(F(c.prototype),"removeEventListener",this).call(this),this._form.removeEventListener("submit",this._handleSubmitDelete)}}])&&D(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(h);function H(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var z,K,Q=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._url=t.url,this._headers=t.headers}var t,n;return t=e,(n=[{key:"_checkResponse",value:function(e){return console.log(e),e.ok?e.json():Promise.reject("Что-то пошло не так: ".concat(e.status))}},{key:"getUserInfoApi",value:function(){return fetch("".concat(this._url,"/users/me"),{method:"GET",headers:this._headers}).then(this._checkResponse)}},{key:"getInitialCards",value:function(){return fetch("".concat(this._url,"/cards"),{method:"GET",headers:this._headers}).then(this._checkResponse)}},{key:"setUserInfoApi",value:function(e,t){return fetch("".concat(this._url,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(this._checkResponse)}},{key:"addNewCard",value:function(e,t){return fetch("".concat(this._url,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then(this._checkResponse)}},{key:"like",value:function(e){return fetch("".concat(this._url,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then(this._checkResponse)}},{key:"dislike",value:function(e){return fetch("".concat(this._url,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"changeAvatar",value:function(e){return fetch("".concat(this._url,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}}])&&H(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),W=new G(".modal-delete",".modal__form_place_delete"),X=new B(".modalpic",(function(e){var t=this;X.alertLoading(!0,"Создать"),te.addNewCard(e.cardname,e.cardlink).then((function(e){K.addItem(oe(e)),X.close()})).catch((function(e){console.log(e)})).finally((function(){t.alertLoading(!1,"Создать")}))})),Y=new w(".modal-card"),Z=new B(".modal-edit",(function(e){Z.alertLoading(!0,"Сохранить"),te.setUserInfoApi(e.username,e.userjob).then((function(e){$.setUserInfo(e),Z.close()})).catch((function(e){console.log(e)})).finally((function(){Z.alertLoading(!1,"Сохранить")}))})),$=new x(".profile__name",".profile__occupation",".profile__foto"),ee=new B(".modal-edid-avatar",(function(e){ee.alertLoading(!0,"Сохранить"),te.changeAvatar(e.avatar).then((function(e){$.setUserInfo(e),ee.close()})).catch((function(e){console.log(e)})).finally((function(){ee.alertLoading(!1,"Сохранить")}))})),te=new Q({url:"https://mesto.nomoreparties.co/v1/cohort36",headers:{authorization:"aae70420-34f5-44cc-8cb0-a49b7f2f456b","Content-Type":"application/json"}}),ne=te.getUserInfoApi(),re=te.getInitialCards();function oe(e){var t=new l(e,"#element",ie,z,(function(){W.open((function(){return te.deleteCard(t.getId()).then((function(){t.deleteElement(),W.close()})).catch((function(e){console.log(e)}))}))}),(function(){te.like(t.getId()).then((function(e){t.likeElement(),t.countLikes(e)})).catch((function(e){console.log(e)}))}),(function(){te.dislike(t.getId()).then((function(e){t.dislikeElement(),t.countLikes(e)})).catch((function(e){console.log(e)}))}));return t.createCard()}function ie(e,t){this.src=t,this.textContent=e,Y.open(e,t)}ne.then((function(e){z=e._id,$.setUserInfo(e)})).catch((function(e){console.log(e)})),re.then((function(e){(K=new _({items:e,renderer:function(e){var t=oe(e);K.addItem(t)}},".elements")).renderItems()})).catch((function(e){console.log(e)})),Promise.all([ne,re]).then((function(e){console.log(e)})).catch((function(e){console.log(e)})),t.addEventListener("click",(function(){n.value=$.getUserInfo().userName,r.value=$.getUserInfo().userInfo,Z.open(),ce.resetValidation()})),o.addEventListener("click",(function(){X.open(),le.resetValidation()})),i.addEventListener("click",(function(){ee.open(),ae.resetValidation()}));var ce=new s(e,".modal__form_place_regform"),le=new s(e,".modal__form_place_modalpic"),ae=new s(e,".modal__form_place_edit-avatar");le.enableValidation(),ce.enableValidation(),ae.enableValidation()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,