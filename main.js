(()=>{"use strict";var e={formSelector:".modal__form",inputSelector:".modal__field",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__field_type_error",errorClass:"modal__error_visible"},t=document.querySelector(".profile__edit-button"),n=document.querySelector(".modal__field_type_name"),r=document.querySelector(".modal__field_type_occupation"),o=(document.querySelector(".profile__name"),document.querySelector(".profile__occupation"),document.querySelector(".profile__foto"),document.querySelector(".profile__add-button")),i=document.querySelector(".modal__field_type_card-name"),c=document.querySelector(".modal__field_type_card-link"),a=(document.querySelector(".modal__button_place_profile"),document.querySelector(".modal__button_type_create")),l=document.querySelector(".modal__button_place_edit-avatar"),u=document.querySelector(".profile__avatar"),s=document.querySelector(".modal__field_type_url-avatar");function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var d=function(){function e(t,n,r,o,i,c,a){var l,u,s=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),u=function(){s._element.remove()},(l="deleteElement")in this?Object.defineProperty(this,l,{value:u,enumerable:!0,configurable:!0,writable:!0}):this[l]=u,this._item=t,this._name=t.name,this._link=t.link,this._likes=t.likes,this._id=t._id,this._selector=n,this._openModalCard=r,this._myId=o,this._ownerId=t.owner._id,this._like=c,this._dislike=a,this._handleCardDelete=i}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._selector).content.querySelector(".element").cloneNode(!0)}},{key:"getId",value:function(){return this._id}},{key:"createCard",value:function(){return this._element=this._getTemplate(),this._ownerId!=this._myId&&this._element.querySelector(".element__delete").remove(),this._element.querySelector(".element__image").src=this._link,this._element.querySelector(".element__image").alt=this._name,this._element.querySelector(".element__name").textContent=this._name,this._setEventListeners(),this.countLikes(this._item),this._checkLikes(),this._element}},{key:"likeElement",value:function(){this._element.querySelector(".element__like").classList.add("element__like_active")}},{key:"dislikeElement",value:function(){this._element.querySelector(".element__like").classList.remove("element__like_active")}},{key:"_checkLikes",value:function(){var e=this;this._likes.forEach((function(t){t._id===e._myId&&e._element.querySelector(".element__like").classList.add("element__like_active")}))}},{key:"countLikes",value:function(e){this._element.querySelector(".element__count").textContent=e.likes.length,0===e.likes.length?this._element.querySelector(".element__count").classList.add("element__count_disactive"):this._element.querySelector(".element__count").classList.remove("element__count_disactive")}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".element__image").addEventListener("click",(function(){e._openModalCard(e._name,e._link)})),this._ownerId===this._myId&&this._element.querySelector(".element__delete").addEventListener("click",(function(){e._handleCardDelete()})),this._element.querySelector(".element__like").addEventListener("click",(function(){e._element.querySelector(".element__like").classList.contains("element__like_active")?(e.dislikeElement(),e._dislike()):(e.likeElement(),e._like())}))}}])&&f(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function _(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function p(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var h=function(){function e(t,n){var r=this,o=t.inputSelector,i=t.submitButtonSelector,c=t.inactiveButtonClass,a=t.inputErrorClass,l=t.errorClass;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),p(this,"_hideInputError",(function(e){var t=r._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(r._inputErrorClass),t.classList.remove(r._errorClass),t.textContent=""})),p(this,"_toggleButtonState",(function(){var e=r._form.querySelector(r._submitButtonSelector);r._inputList.some((function(e){return!e.validity.valid}))?(e.setAttribute("disabled",!0),e.classList.add(r._inactiveButtonClass)):(e.removeAttribute("disabled"),e.classList.remove(r._inactiveButtonClass))})),p(this,"_checkInputValidity",(function(e){e.validity.valid?r._hideInputError(e):r._showInputError(e,e.validationMessage)})),p(this,"_setEventListeners",(function(){r._inputList.forEach((function(e){e.addEventListener("input",(function(){r._checkInputValidity(e),r._toggleButtonState()}))})),r._toggleButtonState()})),p(this,"enableValidation",(function(){r._form.addEventListener("submit",(function(e){e.preventDefault()})),r._setEventListeners()})),this._inputSelector=o,this._submitButtonSelector=i,this._inactiveButtonClass=c,this._inputErrorClass=a,this._errorClass=l,this._form=document.querySelector(n),this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector))}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e,t){var n=this._form.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),n.textContent=t,n.classList.add(this._errorClass)}}])&&_(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var m=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._initialArray=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._initialArray.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.append(e)}}])&&y(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function b(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var k=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),b(this,"_closeModalByESC",(function(e){"Escape"===e.key&&n.close()})),b(this,"_closeModalByOverlay",(function(e){e.target.classList.contains("modal")&&n.close()})),this._popup=document.querySelector(t),this._closeBtn=this._popup.querySelector(".modal__close-icon")}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("modal_active"),document.body.classList.add("page-js"),this.setEventListeners()}},{key:"close",value:function(){this._popup.classList.remove("modal_active"),document.body.classList.remove("page-js"),this.removeEventListener()}},{key:"setEventListeners",value:function(){var e=this;this._closeBtn.addEventListener("click",(function(){e.close()})),document.addEventListener("click",this._closeModalByOverlay),document.addEventListener("keydown",this._closeModalByESC)}},{key:"removeEventListener",value:function(){document.removeEventListener("keydown",this._closeModalByESC)}}])&&v(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function g(e){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},g(e)}function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function S(){return S="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=E(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},S.apply(this,arguments)}function E(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=L(e)););return e}function j(e,t){return j=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},j(e,t)}function O(e,t){if(t&&("object"===g(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function L(e){return L=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},L(e)}var P=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&j(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=L(r);if(o){var n=L(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return O(this,e)});function c(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(t=i.call(this,e))._popupImage=t._popup.querySelector(".modal-card__image"),t._popupLabel=t._popup.querySelector(".modal-card__label"),t}return t=c,(n=[{key:"open",value:function(e,t){S(L(c.prototype),"open",this).call(this),this._popupImage.src=t,this._popupLabel.textContent=e}}])&&w(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(k);function C(e){return C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},C(e)}function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function I(){return I="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=R(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},I.apply(this,arguments)}function R(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=x(e)););return e}function T(e,t){return T=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},T(e,t)}function B(e,t){if(t&&("object"===C(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return A(e)}function A(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function x(e){return x=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},x(e)}var D=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&T(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=x(r);if(o){var n=x(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return B(this,e)});function c(e,t){var n,r,o,a;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),a=function(){n._handleFormSubmit(n._getInputValues()),n.close()},(o="_handleSubmit")in(r=A(n=i.call(this,e)))?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a,n._handleFormSubmit=t,n._form=n._popup.querySelector(".modal__form"),n._inputList=n._form.querySelectorAll(".modal__field"),n}return t=c,(n=[{key:"_getInputValues",value:function(){var e={};return this._inputList.forEach((function(t){e.name=t.value})),e}},{key:"setEventListeners",value:function(){I(x(c.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",this._handleSubmit)}},{key:"removeEventListener",value:function(){I(x(c.prototype),"removeEventListener",this).call(this),this._form.removeEventListener("submit",this._handleSubmit)}},{key:"close",value:function(){I(x(c.prototype),"close",this).call(this),this._form.reset(),this.removeEventListener()}},{key:"alertLoading",value:function(e){this._popup.querySelector(".button_loader").textContent=e?"Сохранение...":"Сохранить"}}])&&q(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(k);function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var N=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=document.querySelector(t),this._userInfo=document.querySelector(n),this._userAvatar=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{userName:this._userName.textContent,userInfo:this._userInfo.textContent}}},{key:"setUserInfo",value:function(e){this._userName.textContent=e.name,this._userInfo.textContent=e.about,this._userAvatar.src=e.avatar,this._id=e._id}},{key:"getId",value:function(){return this._id}}])&&U(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function M(e){return M="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},M(e)}function V(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function J(){return J="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=F(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},J.apply(this,arguments)}function F(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=z(e)););return e}function G(e,t){return G=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},G(e,t)}function H(e,t){if(t&&("object"===M(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function z(e){return z=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},z(e)}var K=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&G(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=z(r);if(o){var n=z(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return H(this,e)});function c(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(n=i.call(this,e))._form=document.querySelector(t),n}return t=c,(n=[{key:"open",value:function(e){J(z(c.prototype),"open",this).call(this),this._deleteElement=e}},{key:"setEventListeners",value:function(){var e=this;J(z(c.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._deleteElement()}))}}])&&V(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(k);function Q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var W,X,Y=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._url=t.url,this._headers=t.headers}var t,n;return t=e,(n=[{key:"getUserInfoApi",value:function(){return fetch("".concat(this._url,"/users/me"),{method:"GET",headers:this._headers}).then((function(e){return console.log(e),e.ok?e.json():Promise.reject("Что-то пошло не так: ".concat(e.status))}))}},{key:"getInitialCards",value:function(){return fetch("".concat(this._url,"/cards"),{method:"GET",headers:this._headers}).then((function(e){return console.log(e),e.ok?e.json():Promise.reject("Что-то пошло не так: ".concat(e.status))}))}},{key:"setUserInfoApi",value:function(e,t){return fetch("".concat(this._url,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then((function(e){return e.ok?e.json():Promise.reject("Что-то пошло не так: ".concat(e.status))}))}},{key:"addNewCard",value:function(e,t){return fetch("".concat(this._url,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then((function(e){return e.ok?e.json():Promise.reject("Что-то пошло не так: ".concat(e.status))}))}},{key:"like",value:function(e){return fetch("".concat(this._url,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Что-то пошло не так: ".concat(e.status))}))}},{key:"dislike",value:function(e){return fetch("".concat(this._url,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Что-то пошло не так: ".concat(e.status))}))}},{key:"deleteCard",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Что-то пошло не так: ".concat(e.status))}))}},{key:"changeAvatar",value:function(e){return fetch("".concat(this._url,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((function(e){return e.ok?e.json():Promise.reject("Что-то пошло не так: ".concat(e.status))}))}}])&&Q(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),Z=new K(".modal-delete",".modal__form_place_delete"),$=new D(".modalpic",(function(){var e=this,t={name:i.value,link:c.value};$.alertLoading(!0),oe.addNewCard(t.name,t.link).then((function(e){X.addItem(ie(e))})).catch((function(e){console.log(e)})).finally((function(){e.alertLoading(!1)})),a.setAttribute("disabled",!0),a.classList.add("modal__button_disabled")})),ee=new P(".modal-card"),te=new D(".modal-edit",(function(){var e={username:n.value,userjob:r.value};te.alertLoading(!0),oe.setUserInfoApi(e.username,e.userjob).then((function(e){ne.setUserInfo(e)})).catch((function(e){console.log(e)})).finally((function(){te.alertLoading(!1)}))})),ne=new N(".profile__name",".profile__occupation",".profile__foto"),re=new D(".modal-edid-avatar",(function(){re.alertLoading(!0),oe.changeAvatar(s.value).then((function(e){ne.setUserInfo(e)})).catch((function(e){console.log(e)})).finally((function(){re.alertLoading(!1)})),l.setAttribute("disabled",!0),l.classList.add("modal__button_disabled")})),oe=new Y({url:"https://mesto.nomoreparties.co/v1/cohort36",headers:{authorization:"aae70420-34f5-44cc-8cb0-a49b7f2f456b","Content-Type":"application/json"}});function ie(e){var t=new d(e,"#element",ce,W,(function(){Z.open((function(){return oe.deleteCard(t.getId()).then((function(){t.deleteElement(),Z.close()})).catch((function(e){console.log(e)}))}))}),(function(){oe.like(t.getId()).then((function(e){t.likeElement(),t.countLikes(e)})).catch((function(e){console.log(e)}))}),(function(){oe.dislike(t.getId()).then((function(e){t.dislikeElement(),t.countLikes(e)})).catch((function(e){console.log(e)}))}));return t.createCard()}function ce(e,t){this.src=t,this.textContent=e,ee.open(e,t)}oe.getUserInfoApi().then((function(e){console.log(e),W=e._id,ne.setUserInfo(e)})).catch((function(e){console.log(e)})),oe.getInitialCards().then((function(e){console.log(e),(X=new m({items:e,renderer:function(e){var t=ie(e);X.addItem(t)}},".elements")).renderItems()})).catch((function(e){console.log(e)})),t.addEventListener("click",(function(){n.value=ne.getUserInfo().userName,r.value=ne.getUserInfo().userInfo,te.open()})),o.addEventListener("click",(function(){$.open()})),u.addEventListener("click",(function(){re.open()}));var ae=new h(e,".modal__form_place_regform"),le=new h(e,".modal__form_place_modalpic"),ue=new h(e,".modal__form_place_edit-avatar");le.enableValidation(),ae.enableValidation(),ue.enableValidation()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,